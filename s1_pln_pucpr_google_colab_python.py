# -*- coding: utf-8 -*-
"""S1-PLN-PUCPR_Google_Colab_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvEE9vtr2_DN9EfA8rgQFuGq7lnLzts6

#Google Colab + Python - Primeiro contato
## Processamento de Linguagem Natural
Esta atividade visa uma ambientação com o **Google Colab** e com a linguagem de programação **Python**, que serão a base dos algoritmos desenvolvidos nesta disciplina.

O foco da disciplina de PLN não é aprender a programar em Python, mas sim saber como utilizar as ferramentas que a linguagem oferece no desenvolvimento de algoritmos de PLN e como executá-los na plataform do Google Colab.

Qualquer dúvida que venha a surgir sobre o Python pode ser esclarecida da [documentação oficial](https://docs.python.org/3/) e/ou fóruns online como o [stackoverflow](https://stackoverflow.com/).

---
## **Google Colab**
---
### Benefícios
*   Armazenamento na nuvem - possibilidade de compartilhamento
*   Suporte as principais bibliotecas do Python
*   Sem necessidade de instalação em máquina local
*   Aceleração de GPU
*   Ambiente de notebook torna mais fácil o entendimento
*   **É GRATUITO!**

### Como criar seu código?
Basta clicar no botão "+ Code" abaixo do menu principal. Ao fazê-lo uma nova célula será adicionada ao seu notebook e você pode escrever seu código nela.

### Como executar seu código?
Ao passar o mouse sobre a célula, aparecerá um botão de execução no canto esquerdo, basta clicar que o código de sua célula será executado. Se preferir use o atalho "SHIFT + ENTER".

### Como descrever seu código?
Basta clicar no botão "+ Text" abaixo do menu principal. Ao fazê-lo uma nova célula de texto será adicionada ao seu notebook e você pode escrever o que quiser nela. Se preferir, pode também adicionar comentários nas celulas de código, para tal, basta colocar o sinal de "#" no início da linha que deseja colocar o comentário.

---
## **Python**
---
Como utilizaremos o Google Colab, não será necessária a instalação do Python ou qualquer outra ferramenta em sua máquina. (Caso prefira efetuar a instalação e executar seus códigos localmente, é aconselhada a instalação do software [Anaconda](https://www.anaconda.com/), que faz a instalação e configuração automática de um ambiente com Python e as principais ferramentas necessárias.)

**PRÁTICA:** Execute as células de código a seguir - fique à vontade para fazer alterações no código antes de executar para verificar o que acontece.

### Operadores matemáticos
"""

2 + 2

5 - 2

3 * 4

6 / 3

(2 + 3) * 2

"""### Variáveis"""

caixa = 30

caixa

type(caixa)

gaveta = 20

gaveta

armario = caixa + gaveta

armario

type(armario)

"""### Strings e Input"""

print("Textos sempre devem ficar entre aspas.")

print("Qual o seu nome? (digite e pressione enter)")
nome = input()

nome

type(nome)

"""### Estrutura condicional"""

print("Qual sua idade? (digite e pressione enter)")
idade = int(input())

if idade >= 18:
  print("Você é maior de idade.")
else:
  print("Você é menor de idade.")

print("Em qual cidade você mora? (digite e pressione enter)")
cidade = input()

if cidade.lower() == 'curitiba':
  print('Bem-vindo ao frio!')
else:
  print('Olá forasteiro.')

"""### Estrutura de repetição"""

contador = 1

while (contador <= 20):
  print("O valor atual do contador é: " + str(contador))
  contador = contador + 1

print("Repetição finalizada!")

"""### Importando bibliotecas"""

# Importa biblioteca random
import random

# Mostra 10 números aleatórios entre 1 e 10
for i in range(10):
    print(random.randint(1, 10))

print()

# Mostra 10 números aleatórios entre 1 e 20
for i in range(10):
    print(random.randint(1, 20))

"""### Listas"""

numeros = [1, 2, 3]
numeros

type(numeros)

animais = ['cachorro', 'gato', 'coelho', 'peixe']
animais

# Mostra numero que está no indice 0
numeros[0]

# Mostra numero que está no indice 2
numeros[2]

# Mostra string que está no indice 0
animais[0]

# Mostra string que está no indice 3
animais[3]

# Acessando a lista usando repetição - Opção 1
for i in range(len(animais)):
  # Imprime todas as posições da lista com as respectivas informações
  print('Posição ' + str(i) + ' na lista de animais corresponde a: ' + animais[i])

# Acessando a lista usando repetição - Opção 2
for animal in animais:
  print('Animal: ' + animal)

"""## Material complementar
Recomendo a leitura dos materiais complementares até você estar confortável com o uso do Google Colab, especialmente para quem tem pouco contato com programação.

*   [MELHOR FORMA DE APRENDER PYTHON (Google Colab Notebook)](https://www.youtube.com/watch?v=Gojqw9BQ5qY)
*   [Getting started with Google Colab - Official](https://colab.research.google.com/notebooks/welcome.ipynb)
*   [Overview of Colab features](https://colab.research.google.com/notebooks/basic_features_overview.ipynb)
*   [Getting started with Google Colab](https://towardsdatascience.com/getting-started-with-google-colab-f2fff97f594c)
*    [Automate the Boring Stuff with Python - Practical programming for total beginners](https://automatetheboringstuff.com/)
*    [Python Tutorial](https://www.devmedia.com.br/python-tutorial/33274)
*    [Enough Python](https://gist.github.com/aparrish/50803e0ae51a2c6e775af36ea79be285)

Este notebook foi produzido por Prof. [Lucas Oliveira](http://lattes.cnpq.br/3611246009892500) e revisado por Carla Silveira.
"""