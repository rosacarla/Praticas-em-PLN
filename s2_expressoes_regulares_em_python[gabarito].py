# -*- coding: utf-8 -*-
"""S2-Expressoes-regulares-em-Python[Gabarito].ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gfRd_ZA1_2KjvXP6m2yCgrpAB3QvTeDX

#GABARITO
#Expressões Regulares em Python

##**ATIVIDADE PRÁTICA**
Atividades de fixação no uso de Expressões Regulares

### 1) Obtenha todas palavras do texto
"""

texto = "Um texto qualquer sem qualquer valor semântico."
re.findall(r"\w+", texto)

"""### 2) Obtenha a primeira palavra do texto"""

texto = "Um texto qualquer sem qualquer valor semântico."
re.findall(r"^[a-zA-Z]+", texto) #ou usar search()

"""### 3) Obtenha a posição de início do primeiro espaço (white-space) encontrado no texto a seguir"""

texto = "Um texto qualquer sem qualquer valor semântico."
match = re.search(r"\s", texto)
match.start()

"""### 4) Obtenha os dois primeiros caracteres de cada palavra
Dica: Pesquise sobre o caracter de word boundary `\b`, que encontra as delimitações de cada palavra
"""

texto = "Um texto qualquer sem qualquer valor semântico."
re.findall(r"\b\w{2}", texto)

"""### 5) Obtenha datas no formato brasileiro (dd/mm/aaaa) e americano (aaaa-mm-dd)"""

texto = "Data: 27/02/1987. Date: 1987-02-27."
re.findall(r"([0-9]{2}/[0-9]{2}/[0-9]{4})|([0-9]{4}-[0-9]{2}-[0-9]{2})", texto)

"""### 6) Obtenha todas palavras que terminem com vogal"""

texto = "Um texto qualquer sem qualquer valor semântico."
re.findall(r"\w+[aeiou]{1}\b", texto)

"""### 7) Substitua toda ocorrência da palavra "Avenida" por "Av."

"""

texto = "Endereço: Avenida Getúlio Vargas, 1811\nEndereço: avenida visconde de guarapuava, 1533"

"""###8) Obtenha os endereços sem a numeração"""

texto = "Endereço: Avenida Getúlio Vargas, 1811\nEndereço: avenida visconde de guarapuava, 1533"

"""### 9) Substitua todas ocorrências de espaços, vírgulas e pontos pelo underline"""

text = 'Python Exercises, PHP exercises.'
print(re.sub("[ ,.]", "_", text))

"""## Referências e Material complementar


*   [RegEx Cheat Sheet](https://www.rexegg.com/regex-quickstart.html)
*   [Tutorial sobre expressões regulares para iniciantes em Python](https://www.vooo.pro/insights/tutorial-sobre-expressoes-regulares-para-iniciantes-em-python/)
*   [Python Regular Expressions by Google](https://developers.google.com/edu/python/regular-expressions)
*   [Python ReGex Exercises](https://www.w3resource.com/python-exercises/re/)

Este notebook foi produzido por Prof. [Lucas Oliveira](http://lattes.cnpq.br/3611246009892500).
"""